{"version":3,"sources":["client.js"],"names":[],"mappings":";;;;;;AAGA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;AAfA;;;AAiBA,IAAM,SAAS,yBAAf;AACA,IAAM,kBAAkB,iCAAU;AAAA;AAAA,CAAV,GAAxB;AACA,IAAM,OAAO,SAAS,cAAT,CAAwB,SAAxB,CAAb;AACA,IAAM,UAAU,sBAAY,eAAZ,EAA6B,MAA7B,EAAqC,OAAO,MAA5C,CAAhB;AACA,IAAM,QAAQ,QAAQ,KAAtB;AACA,IAAM,UAAU,4CAAqB,eAArB,EAAsC,KAAtC,CAAhB;;AAEA,SAAS,UAAT,GAAsB;AACpB,MAAM,SAAS,sBAAG,EAAH,EAAO,EAAC,MAAM,KAAP,EAAP,CAAf;AACA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAC,IAAD,EAAU;AAC1B,YAAQ,GAAR,CAAY,IAAZ;AACA,WAAO,IAAP,CAAY,gBAAZ,EAA8B,EAAE,IAAI,kBAAN,EAA9B;AACD,GAHD;AAIA,SAAO,EAAP,CAAU,KAAV,EAAiB,UAAC,IAAD,EAAU;AACzB,YAAQ,GAAR,CAAY,IAAZ;AACD,GAFD;;AAIA,SAAO,MAAP;AACD;;AAED,OAAO,MAAP,GAAgB,YAAhB;;AAEA,IAAM,YACJ;AAAA;AAAA,IAAQ,QAAQ,gBAAC,KAAD;AAAA,aACV,+FAAuB,KAAvB,IAA8B,SAAS,EAAC,cAAD,EAAvC,EAAiD,QAAQ;AAAA,iBAAQ,CAAC,KAAK,QAAd;AAAA,SAAzD,IADU;AAAA,KAAhB,EAEM,SAAS,OAFf;AAGG,wBAAU,KAAV;AAHH,CADF;;AAQA,mBAAS,MAAT,CACE;AAAA;AAAA,IAAU,OAAO,KAAjB,EAAwB,KAAI,UAA5B;AACG;AADH,CADF,EAIE,IAJF;;AAOA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,SAAO,KAAP,mBADyC,CACnB;;AAEtB,MAAI,CAAC,IAAD,IAAS,CAAC,KAAK,UAAf,IAA6B,CAAC,KAAK,UAAL,CAAgB,UAA9C,IAA4D,CAAC,KAAK,UAAL,CAAgB,UAAhB,CAA2B,qBAA3B,CAAjE,EAAoH;AAClH,YAAQ,KAAR,CAAc,mHAAd;AACD;AACF;;AAED,IAAI,gBAAgB,CAAC,OAAO,iBAA5B,EAA+C;AAC7C,MAAM,WAAW,QAAQ,gCAAR,CAAjB;AACA,qBAAS,MAAT,CACE;AAAA;AAAA,MAAU,OAAO,KAAjB,EAAwB,KAAI,UAA5B;AACE;AAAA;AAAA;AACG,eADH;AAEE,oCAAC,QAAD;AAFF;AADF,GADF,EAOE,IAPF;AASD","file":"client-compiled.js","sourcesContent":["/**\n * THIS IS THE ENTRY POINT FOR THE CLIENT, JUST LIKE server.js IS THE ENTRY POINT FOR THE SERVER.\n */\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createStore from './redux/create';\nimport ApiClient from './helpers/ApiClient';\nimport io from 'socket.io-client';\nimport {Provider} from 'react-redux';\nimport { Router, browserHistory } from 'react-router';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { ReduxAsyncConnect } from 'redux-async-connect';\nimport useScroll from 'scroll-behavior/lib/useStandardScroll';\n\nimport getRoutes from './routes';\n\nconst client = new ApiClient();\nconst _browserHistory = useScroll(() => browserHistory)();\nconst dest = document.getElementById('content');\nconst created = createStore(_browserHistory, client, window.__data);\nconst store = created.store;\nconst history = syncHistoryWithStore(_browserHistory, store);\n\nfunction initSocket() {\n  const socket = io('', {path: '/ws'});\n  socket.on('news', (data) => {\n    console.log(data);\n    socket.emit('my other event', { my: 'data from client' });\n  });\n  socket.on('msg', (data) => {\n    console.log(data);\n  });\n\n  return socket;\n}\n\nglobal.socket = initSocket();\n\nconst component = (\n  <Router render={(props) =>\n        <ReduxAsyncConnect {...props} helpers={{client}} filter={item => !item.deferred} />\n      } history={history}>\n    {getRoutes(store)}\n  </Router>\n);\n\nReactDOM.render(\n  <Provider store={store} key=\"provider\">\n    {component}\n  </Provider>,\n  dest\n);\n\nif (process.env.NODE_ENV !== 'production') {\n  window.React = React; // enable debugger\n\n  if (!dest || !dest.firstChild || !dest.firstChild.attributes || !dest.firstChild.attributes['data-react-checksum']) {\n    console.error('Server-side React render was discarded. Make sure that your initial render does not contain any client-side code.');\n  }\n}\n\nif (__DEVTOOLS__ && !window.devToolsExtension) {\n  const DevTools = require('./containers/DevTools/DevTools');\n  ReactDOM.render(\n    <Provider store={store} key=\"provider\">\n      <div>\n        {component}\n        <DevTools />\n      </div>\n    </Provider>,\n    dest\n  );\n}\n\n"]}