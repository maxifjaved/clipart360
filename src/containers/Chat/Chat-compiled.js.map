{"version":3,"sources":["Chat.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;0CAEC,yBACC;AAAA,SAAU,EAAC,MAAM,MAAM,IAAN,CAAW,IAAlB,EAAV;AAAA,CADD,C;;;;;;;;;;;;;;wMASC,K,GAAQ;AACN,eAAS,EADH;AAEN,gBAAU;AAFJ,K,QAoBR,iB,GAAoB,UAAC,IAAD,EAAU;AAC5B,UAAM,WAAW,MAAK,KAAL,CAAW,QAA5B;AACA,eAAS,IAAT,CAAc,IAAd;AACA,YAAK,QAAL,CAAc,EAAC,kBAAD,EAAd;AACD,K,QAED,Y,GAAe,UAAC,KAAD,EAAW;AACxB,YAAM,cAAN;;AAEA,UAAM,MAAM,MAAK,KAAL,CAAW,OAAvB;;AAEA,YAAK,QAAL,CAAc,EAAC,SAAS,EAAV,EAAd;;AAEA,aAAO,IAAP,CAAY,KAAZ,EAAmB;AACjB,cAAM,MAAK,KAAL,CAAW,IAAX,CAAgB,IADL;AAEjB,cAAM;AAFW,OAAnB;AAID,K;;;;;wCAhCmB;AAClB,UAAI,MAAJ,EAAY;AACV,eAAO,EAAP,CAAU,KAAV,EAAiB,KAAK,iBAAtB;AACA,mBAAW,YAAM;AACf,iBAAO,IAAP,CAAY,SAAZ,EAAuB,EAAC,QAAQ,CAAT,EAAY,QAAQ,GAApB,EAAvB;AACD,SAFD,EAEG,CAFH;AAGD;AACF;;;2CAEsB;AACrB,UAAI,MAAJ,EAAY;AACV,eAAO,cAAP,CAAsB,KAAtB,EAA6B,KAAK,iBAAlC;AACD;AACF;;;6BAqBQ;AAAA;;AACP,UAAM,QAAQ,QAAQ,aAAR,CAAd;AADO,UAEA,IAFA,GAEQ,KAAK,KAFb,CAEA,IAFA;;;AAIP,aACE;AAAA;AAAA,UAAK,WAAW,MAAM,IAAN,GAAa,YAA7B;AACE;AAAA;AAAA,YAAI,WAAW,KAAf;AAAA;AAAA,SADF;AAGG,gBACD;AAAA;AAAA;AACE;AAAA;AAAA;AACC,iBAAK,KAAL,CAAW,QAAX,CAAoB,GAApB,CAAwB,UAAC,GAAD,EAAS;AAChC,qBAAO;AAAA;AAAA,kBAAI,mBAAiB,IAAI,EAAzB;AAAgC,oBAAI,IAApC;AAAA;AAA4C,oBAAI;AAAhD,eAAP;AACD,aAFA;AADD,WADF;AAME;AAAA;AAAA,cAAM,WAAU,YAAhB,EAA6B,UAAU,KAAK,YAA5C;AACE,qDAAO,MAAK,MAAZ,EAAmB,KAAI,SAAvB,EAAiC,aAAY,oBAA7C;AACC,qBAAO,KAAK,KAAL,CAAW,OADnB;AAEC,wBAAU,kBAAC,KAAD,EAAW;AACnB,uBAAK,QAAL,CAAc,EAAC,SAAS,MAAM,MAAN,CAAa,KAAvB,EAAd;AACD,eAJF,GADF;AAOE;AAAA;AAAA,gBAAQ,WAAU,KAAlB,EAAwB,SAAS,KAAK,YAAtC;AAAA;AAAA;AAPF;AANF;AAJF,OADF;AAwBD;;;8BAvEM,S,GAAY;AACjB,QAAM,kBAAU;AADC,C","file":"Chat-compiled.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\n\n@connect(\n  state => ({user: state.auth.user})\n)\nexport default class Chat extends Component {\n\n  static propTypes = {\n    user: PropTypes.object\n  };\n\n  state = {\n    message: '',\n    messages: []\n  };\n\n  componentDidMount() {\n    if (socket) {\n      socket.on('msg', this.onMessageReceived);\n      setTimeout(() => {\n        socket.emit('history', {offset: 0, length: 100});\n      }, 1);\n    }\n  }\n\n  componentWillUnmount() {\n    if (socket) {\n      socket.removeListener('msg', this.onMessageReceived);\n    }\n  }\n\n  onMessageReceived = (data) => {\n    const messages = this.state.messages;\n    messages.push(data);\n    this.setState({messages});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const msg = this.state.message;\n\n    this.setState({message: ''});\n\n    socket.emit('msg', {\n      from: this.props.user.name,\n      text: msg\n    });\n  }\n\n  render() {\n    const style = require('./Chat.scss');\n    const {user} = this.props;\n\n    return (\n      <div className={style.chat + ' container'}>\n        <h1 className={style}>Chat</h1>\n\n        {user &&\n        <div>\n          <ul>\n          {this.state.messages.map((msg) => {\n            return <li key={`chat.msg.${msg.id}`}>{msg.from}: {msg.text}</li>;\n          })}\n          </ul>\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\n            <input type=\"text\" ref=\"message\" placeholder=\"Enter your message\"\n             value={this.state.message}\n             onChange={(event) => {\n               this.setState({message: event.target.value});\n             }\n            }/>\n            <button className=\"btn\" onClick={this.handleSubmit}>Send</button>\n          </form>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n"]}