{"version":3,"sources":["create.js"],"names":[],"mappings":";;;;;kBAMwB,W;;AANxB;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEe,SAAS,WAAT,CAAqB,OAArB,EAA8B,MAA9B,EAAsC,IAAtC,EAA4C;AACzD;AACA,MAAM,wBAAwB,wCAAiB,OAAjB,CAA9B;;AAEA,MAAM,aAAa,CAAC,gCAAiB,MAAjB,CAAD,EAA2B,qBAA3B,uBAAnB;;AAEA,MAAI,yBAAJ;AACA,MAAI,mBAAmB,UAAnB,IAAiC,YAArC,EAAmD;AAAA,mBACxB,QAAQ,gBAAR,CADwB;AAAA,QACzC,YADyC,YACzC,YADyC;;AAEjD,QAAM,WAAW,QAAQ,iCAAR,CAAjB;AACA,uBAAmB,oBACjB,wCAAmB,UAAnB,CADiB,EAEjB,OAAO,iBAAP,GAA2B,OAAO,iBAAP,EAA3B,GAAwD,SAAS,UAAT,EAFvC,EAGjB,aAAa,OAAO,QAAP,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,6BAA3B,CAAb,CAHiB,qBAAnB;AAKD,GARD,MAQO;AACL,uBAAmB,wCAAmB,UAAnB,qBAAnB;AACD;;AAED,MAAM,UAAU,QAAQ,mBAAR,CAAhB;AACA,MAAI,IAAJ,EAAU;AACR,SAAK,UAAL,GAAkB,oBAAU,MAAV,CAAiB,KAAK,UAAtB,CAAlB;AACD;AACD,MAAM,QAAQ,iBAAiB,OAAjB,EAA0B,IAA1B,CAAd;;AAGA,MAAI,mBAAmB,OAAO,GAA9B,EAAmC;AACjC,WAAO,GAAP,CAAW,MAAX,CAAkB,mBAAlB,EAAuC,YAAM;AAC3C,YAAM,cAAN,CAAqB,QAAQ,mBAAR,CAArB;AACD,KAFD;AAGD;;AAED,SAAO,KAAP;AACD","file":"create-compiled.js","sourcesContent":["import { createStore as _createStore, applyMiddleware, compose } from 'redux';\nimport createMiddleware from './middleware/clientMiddleware';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport Immutable from 'immutable';\n\nexport default function createStore(history, client, data) {\n  // Sync dispatched route actions to the history\n  const reduxRouterMiddleware = routerMiddleware(history);\n\n  const middleware = [createMiddleware(client), reduxRouterMiddleware, thunk];\n\n  let finalCreateStore;\n  if (__DEVELOPMENT__ && __CLIENT__ && __DEVTOOLS__) {\n    const { persistState } = require('redux-devtools');\n    const DevTools = require('../containers/DevTools/DevTools');\n    finalCreateStore = compose(\n      applyMiddleware(...middleware),\n      window.devToolsExtension ? window.devToolsExtension() : DevTools.instrument(),\n      persistState(window.location.href.match(/[?&]debug_session=([^&]+)\\b/))\n    )(_createStore);\n  } else {\n    finalCreateStore = applyMiddleware(...middleware)(_createStore);\n  }\n\n  const reducer = require('./modules/reducer');\n  if (data) {\n    data.pagination = Immutable.fromJS(data.pagination);\n  }\n  const store = finalCreateStore(reducer, data);\n\n\n  if (__DEVELOPMENT__ && module.hot) {\n    module.hot.accept('./modules/reducer', () => {\n      store.replaceReducer(require('./modules/reducer'));\n    });\n  }\n\n  return store;\n}\n"]}