{"version":3,"sources":["auth.js"],"names":[],"mappings":";;;;;;;;;;kBAgBwB,O;QA6DR,Q,GAAA,Q;QAIA,I,GAAA,I;QAOA,K,GAAA,K;QAWA,M,GAAA,M;;AAnGhB;;;;AAYA,IAAM,eAAe;AACnB,UAAQ;AADW,CAArB;;AAIe,SAAS,OAAT,GAAoD;AAAA,MAAnC,KAAmC,uEAA3B,YAA2B;AAAA,MAAb,MAAa,uEAAJ,EAAI;;AACjE,UAAQ,OAAO,IAAf;AACE;AACE,wCACK,KADL;AAEE,iBAAS;AAFX;AAIF;AACE,wCACK,KADL;AAEE,iBAAS,KAFX;AAGE,gBAAQ,IAHV;AAIE,cAAM,OAAO;AAJf;AAMF;AACE,wCACK,KADL;AAEE,iBAAS,KAFX;AAGE,gBAAQ,KAHV;AAIE,eAAO,OAAO;AAJhB;AAMF;AACE,wCACK,KADL;AAEE,mBAAW;AAFb;AAIF;AACE,wCACK,KADL;AAEE,mBAAW,KAFb;AAGE,cAAM,OAAO;AAHf;AAKF;AACE,wCACK,KADL;AAEE,mBAAW,KAFb;AAGE,cAAM,IAHR;AAIE,oBAAY,OAAO;AAJrB;AAMF;AACE,wCACK,KADL;AAEE,oBAAY;AAFd;AAIF;AACE,wCACK,KADL;AAEE,oBAAY,KAFd;AAGE,cAAM;AAHR;AAKF;AACE,wCACK,KADL;AAEE,oBAAY,KAFd;AAGE,qBAAa,OAAO;AAHtB;AAKF;AACE,aAAO,KAAP;AAxDJ;AA0DD;;AAEM,SAAS,QAAT,CAAkB,WAAlB,EAA+B;AACpC,SAAO,YAAY,IAAZ,IAAoB,YAAY,IAAZ,CAAiB,MAA5C;AACD;;AAEM,SAAS,IAAT,GAAgB;AACrB,SAAO;AACL,WAAO,+EADF;AAEL,aAAS,iBAAC,MAAD;AAAA,aAAY,OAAO,GAAP,CAAW,WAAX,CAAZ;AAAA;AAFJ,GAAP;AAID;;AAEM,SAAS,KAAT,CAAe,IAAf,EAAqB;AAC1B,SAAO;AACL,WAAO,kFADF;AAEL,aAAS,iBAAC,MAAD;AAAA,aAAY,OAAO,IAAP,CAAY,QAAZ,EAAsB;AACzC,cAAM;AACJ,gBAAM;AADF;AADmC,OAAtB,CAAZ;AAAA;AAFJ,GAAP;AAQD;;AAEM,SAAS,MAAT,GAAkB;AACvB,SAAO;AACL,WAAO,qFADF;AAEL,aAAS,iBAAC,MAAD;AAAA,aAAY,OAAO,GAAP,CAAW,SAAX,CAAZ;AAAA;AAFJ,GAAP;AAID","file":"auth-compiled.js","sourcesContent":["import {\n  AUTH_LOAD,\n  AUTH_LOAD_SUCCESS,\n  AUTH_LOAD_FAIL,\n  AUTH_LOGIN,\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGIN_FAIL,\n  AUTH_LOGOUT,\n  AUTH_LOGOUT_SUCCESS,\n  AUTH_LOGOUT_FAIL\n} from '../constants';\n\nconst initialState = {\n  loaded: false\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case AUTH_LOAD:\n      return {\n        ...state,\n        loading: true\n      };\n    case AUTH_LOAD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        user: action.result\n      };\n    case AUTH_LOAD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error: action.error\n      };\n    case AUTH_LOGIN:\n      return {\n        ...state,\n        loggingIn: true\n      };\n    case AUTH_LOGIN_SUCCESS:\n      return {\n        ...state,\n        loggingIn: false,\n        user: action.result\n      };\n    case AUTH_LOGIN_FAIL:\n      return {\n        ...state,\n        loggingIn: false,\n        user: null,\n        loginError: action.error\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        loggingOut: true\n      };\n    case AUTH_LOGOUT_SUCCESS:\n      return {\n        ...state,\n        loggingOut: false,\n        user: null\n      };\n    case AUTH_LOGOUT_FAIL:\n      return {\n        ...state,\n        loggingOut: false,\n        logoutError: action.error\n      };\n    default:\n      return state;\n  }\n}\n\nexport function isLoaded(globalState) {\n  return globalState.auth && globalState.auth.loaded;\n}\n\nexport function load() {\n  return {\n    types: [AUTH_LOAD, AUTH_LOAD_SUCCESS, AUTH_LOAD_FAIL],\n    promise: (client) => client.get('/loadAuth')\n  };\n}\n\nexport function login(name) {\n  return {\n    types: [AUTH_LOGIN, AUTH_LOGIN_SUCCESS, AUTH_LOGIN_FAIL],\n    promise: (client) => client.post('/login', {\n      data: {\n        name: name\n      }\n    })\n  };\n}\n\nexport function logout() {\n  return {\n    types: [AUTH_LOGOUT, AUTH_LOGOUT_SUCCESS, AUTH_LOGOUT_FAIL],\n    promise: (client) => client.get('/logout')\n  };\n}\n"]}